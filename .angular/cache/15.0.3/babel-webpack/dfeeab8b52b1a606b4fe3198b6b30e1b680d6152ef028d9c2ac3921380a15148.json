{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n/* Merkataan luokka EmployeeService - Angular Service:ksi */\nexport class EmployeeService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    // Java Spring backend-projektin URL tuodaan tähän.\n    this.baseURL = \"http://localhost:8080/api/v1/employees\";\n  }\n  getEmployeesList() {\n    return this.httpClient.get(`${this.baseURL}`); // (`${this.baseURL}`)\n  }\n\n  createEmployee(employee) {\n    return this.httpClient.post(`${this.baseURL}`, employee);\n  }\n  getEmployeeById(id) {\n    return this.httpClient.get(`${this.baseURL}/${id}`);\n  }\n  updateEmployee(id, employee) {\n    return this.httpClient.put(`${this.baseURL}/${id}`, employee);\n  }\n  deleteEmployee(id) {\n    return this.httpClient.delete(`${this.baseURL}/${id}`);\n  }\n}\nEmployeeService.ɵfac = function EmployeeService_Factory(t) {\n  return new (t || EmployeeService)(i0.ɵɵinject(i1.HttpClient));\n};\nEmployeeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EmployeeService,\n  factory: EmployeeService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA;AAKA,OAAM,MAAOA,eAAe;EAM1BC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAJ9B;IAEQ,YAAO,GAAG,wCAAwC;EAEZ;EAE9CC,gBAAgB;IACd,OAAO,IAAI,CAACD,UAAU,CAACE,GAAG,CAAa,GAAG,IAAI,CAACC,OAAO,EAAE,CAAC,CAAC,CAAI;EAChE;;EAEAC,cAAc,CAACC,QAAkB;IAE/B,OAAO,IAAI,CAACL,UAAU,CAACM,IAAI,CAAC,GAAG,IAAI,CAACH,OAAO,EAAE,EAAEE,QAAQ,CAAC;EAE1D;EAEAE,eAAe,CAACC,EAAU;IAExB,OAAO,IAAI,CAACR,UAAU,CAACE,GAAG,CAAW,GAAG,IAAI,CAACC,OAAO,IAAIK,EAAE,EAAE,CAAC;EAE/D;EAEAC,cAAc,CAACD,EAAU,EAAEH,QAAkB;IAC3C,OAAO,IAAI,CAACL,UAAU,CAACU,GAAG,CAAC,GAAG,IAAI,CAACP,OAAO,IAAIK,EAAE,EAAE,EAAEH,QAAQ,CAAC;EAC/D;EAEAM,cAAc,CAACH,EAAU;IACvB,OAAO,IAAI,CAACR,UAAU,CAACY,MAAM,CAAC,GAAG,IAAI,CAACT,OAAO,IAAIK,EAAE,EAAE,CAAC;EACxD;;AA9BWV,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAe,SAAff,eAAe;EAAAgB,YAFd;AAAM","names":["EmployeeService","constructor","httpClient","getEmployeesList","get","baseURL","createEmployee","employee","post","getEmployeeById","id","updateEmployee","put","deleteEmployee","delete","factory","providedIn"],"sourceRoot":"","sources":["D:\\AngularSpring-project\\angular-frontend\\src\\app\\employee.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable} from 'rxjs';\nimport { Employee } from './employee';\n\n\n\n/* Merkataan luokka EmployeeService - Angular Service:ksi */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  // Java Spring backend-projektin URL tuodaan tähän.\n\n  private baseURL = \"http://localhost:8080/api/v1/employees\";\n\n  constructor(private httpClient: HttpClient) { }\n\n  getEmployeesList(): Observable<Employee[]>{\n    return this.httpClient.get<Employee[]>(`${this.baseURL}`);    // (`${this.baseURL}`)\n  }\n\n  createEmployee(employee: Employee): Observable<Object>{     // POST-request\n\n    return this.httpClient.post(`${this.baseURL}`, employee)\n\n  }\n\n  getEmployeeById(id: number): Observable<Employee>{\n\n    return this.httpClient.get<Employee>(`${this.baseURL}/${id}`);\n\n  }\n\n  updateEmployee(id: number, employee: Employee): Observable<Object>{\n    return this.httpClient.put(`${this.baseURL}/${id}`, employee)\n  }\n\n  deleteEmployee(id: number): Observable<Object>{\n    return this.httpClient.delete(`${this.baseURL}/${id}`);\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}