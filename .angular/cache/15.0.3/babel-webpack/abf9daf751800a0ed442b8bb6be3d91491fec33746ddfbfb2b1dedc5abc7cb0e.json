{"ast":null,"code":"import { Employee } from '../employee';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../employee.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class CreateEmployeeComponent {\n  constructor(employeeService, router) {\n    this.employeeService = employeeService;\n    this.router = router;\n    this.employee = new Employee();\n  }\n  ngOnInit() {}\n  saveEmployee() {\n    this.employeeService.createEmployee(this.employee).subscribe(data => {\n      console.log(data);\n    }, error => console.log(error));\n  }\n  goToEmployeeList() {\n    this.router.navigate(['/employees']);\n  }\n  onSubmit() {\n    console.log(this.employee); // Kirjoitetaan käyttäjän tiedot konsoliin\n    this.saveEmployee();\n  }\n}\nCreateEmployeeComponent.ɵfac = function CreateEmployeeComponent_Factory(t) {\n  return new (t || CreateEmployeeComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.Router));\n};\nCreateEmployeeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateEmployeeComponent,\n  selectors: [[\"app-create-employee\"]],\n  decls: 18,\n  vars: 3,\n  consts: [[1, \"col-md-6\", \"offset-md-3\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"id\", \"firstName\", \"name\", \"firstName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"lastName\", \"name\", \"lastName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"emailId\", \"name\", \"emailId\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"]],\n  template: function CreateEmployeeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"h3\");\n      i0.ɵɵtext(2, \" Create Employee \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateEmployeeComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\");\n      i0.ɵɵtext(6, \" First Name \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateEmployeeComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.employee.firstName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\");\n      i0.ɵɵtext(10, \" Last Name \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateEmployeeComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.employee.lastName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\");\n      i0.ɵɵtext(14, \" Email Id \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateEmployeeComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.employee.emailId = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"button\", 6);\n      i0.ɵɵtext(17, \" Submit \");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.employee.firstName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.employee.lastName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.employee.emailId);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,QAAQ,QAAQ,aAAa;;;;;AAUtC,OAAM,MAAOC,uBAAuB;EAIpCC,YAAoBC,eAAgC,EAAUC,MAAc;IAAxD,oBAAe,GAAfD,eAAe;IAA2B,WAAM,GAANC,MAAM;IAFpE,aAAQ,GAAa,IAAIJ,QAAQ,EAAE;EAInC;EAEAK,QAAQ,IAER;EAEAC,YAAY;IACV,IAAI,CAACH,eAAe,CAACI,cAAc,CAAC,IAAI,CAACC,QAAQ,CAAC,CAACC,SAAS,CAAEC,IAAI,IAAG;MACnEC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB,CAAC,EACDG,KAAK,IAAIF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC,CAAC;EAC9B;EAGAC,gBAAgB;IACd,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;EACtC;EAGAC,QAAQ;IACNL,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,QAAQ,CAAC,CAAC,CAAG;IAC9B,IAAI,CAACF,YAAY,EAAE;EAErB;;AA7BaL,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTpCC,yBAAwC;MACxCA,0BAAI;MAACA,iCAAgB;MAAAA,iBAAK;MAE1BA,+BAAgC;MAA1BA;QAAA,OAAcC,cAAU;MAAA,EAAC;MAE3BD,8BAAwB;MACXA,4BAAW;MAAAA,iBAAQ;MAC5BA,gCAC0D;MAAtDA;QAAA;MAAA,EAAkC;MADtCA,iBAC0D;MAI9DA,8BAAwB;MACXA,4BAAU;MAAAA,iBAAQ;MAC3BA,iCACwD;MAApDA;QAAA;MAAA,EAAiC;MADrCA,iBACwD;MAI5DA,+BAAwB;MACXA,2BAAS;MAAAA,iBAAQ;MAC1BA,iCACsD;MAAlDA;QAAA;MAAA,EAAgC;MADpCA,iBACsD;MAI1DA,kCAA8C;MAACA,yBAAO;MAAAA,iBAAS;;;MAlBvDA,eAAkC;MAAlCA,gDAAkC;MAOlCA,eAAiC;MAAjCA,+CAAiC;MAOjCA,eAAgC;MAAhCA,8CAAgC","names":["Employee","CreateEmployeeComponent","constructor","employeeService","router","ngOnInit","saveEmployee","createEmployee","employee","subscribe","data","console","log","error","goToEmployeeList","navigate","onSubmit","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\AngularSpring-project\\angular-frontend\\src\\app\\create-employee\\create-employee.component.ts","D:\\AngularSpring-project\\angular-frontend\\src\\app\\create-employee\\create-employee.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Employee } from '../employee';\nimport { EmployeeService } from '../employee.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-create-employee',\n  templateUrl: './create-employee.component.html',\n  styleUrls: ['./create-employee.component.css']\n})\nexport class CreateEmployeeComponent implements OnInit {\n\nemployee: Employee = new Employee();\n\nconstructor(private employeeService: EmployeeService, private router: Router){\n\n}\n\nngOnInit(): void {\n    \n}\n\nsaveEmployee(){\n  this.employeeService.createEmployee(this.employee).subscribe( data =>{\n    console.log(data);\n  },\n  error => console.log(error));\n}\n\n\ngoToEmployeeList(){\n  this.router.navigate(['/employees']);\n}\n\n\nonSubmit(){\n  console.log(this.employee);   // Kirjoitetaan käyttäjän tiedot konsoliin\n  this.saveEmployee();\n\n}\n\n}\n","\n\n<div class=\"col-md-6 offset-md-3\"></div>\n<h3> Create Employee </h3>\n\n<form (ngSubmit) = \"onSubmit()\">        <!-- Tapahtumankuuntelija, kun painetaan Submit triggeröidään onSubmit-funktio. -->\n\n    <div class=\"form-group\">\n        <label>  First Name </label>\n        <input type=\"text\" class=\"form-control\" id=\"firstName\"\n            [(ngModel)] = \"employee.firstName\" name = \"firstName\"> \n\n    </div>\n\n    <div class=\"form-group\">\n        <label>  Last Name </label>\n        <input type=\"text\" class=\"form-control\" id=\"lastName\"\n            [(ngModel)] = \"employee.lastName\" name = \"lastName\"> \n\n    </div>\n\n    <div class=\"form-group\">\n        <label>  Email Id </label>\n        <input type=\"text\" class=\"form-control\" id=\"emailId\"\n            [(ngModel)] = \"employee.emailId\" name = \"emailId\"> \n\n    </div>\n\n    <button class=\"btn btn-success\" type=\"submit\"> Submit </button>\n\n\n\n\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}